"use strict";(self["webpackChunkchangeskin"]=self["webpackChunkchangeskin"]||[]).push([[443],{8485:function(t,i,e){e.r(i),e.d(i,{default:function(){return c}});var n=function(){var t=this,i=t._self._c;return i("div",[i("div",[t._v(t._s(t.originArray1))]),i("div",[t._v(t._s(t.originArray2))]),t._l(t.funList,(function(e,n){return i("div",{key:n,staticStyle:{"text-align":"left",padding:"0 20px"}},["forEach"==e.name?i("h3",{staticStyle:{color:"red"}},[t._v(" /*forEach、map、filter、every、some、find，原数组均不改变。(如果数组内元素是基本类型，值不变，若是引用值，引用地址不变)*/"),i("br"),t._v(" /*forEach、map、filter、every、some、find，原数组内元素为引用值时，引用地址不变，引用对象内容可以变化*/ ")]):t._e(),i("p",[t._v("方法名："+t._s(e.name))]),i("p",[t._v("介绍："+t._s(e.introduce))]),i("p",[t._v("原数组："+t._s(e.origin))]),i("p",[t._v("返回值："+t._s(e.return))]),i("button",{on:{click:function(t){return e.optiation(n)}}},[t._v("执行")])])}))],2)},r=[],a={data(){return{originArray1:[1,3,4,6,5],originArray2:[{name:"刘某",age:20},{name:"张某",age:23}],funList:[{name:"shift",introduce:"arrayObject.shift();无参数，删除数组的第一项，返回删除项，原数组改变。",origin:"",return:"",optiation:this.handle},{name:"unshift",introduce:"arrayObject.unshift(num1[,num2...]);将元素插入到数组的起始位置,返回新数组的长度，原数组改变。",origin:"",return:"",optiation:this.handle},{name:"splice",introduce:"arrayObject.splice(index,length[,num1,num2...]);index参数必选，从索引index处删除length个（若length不传，则从index处删除至末尾），用num1，num2...代替删除的内容，返回删除项，原数组改变。",origin:"",return:"",optiation:this.handle},{name:"slice",introduce:"arrayObject.slice(start,end);截取，返回截取后的数组，原数组不变。",origin:"",return:"",optiation:this.handle},{name:"concat",introduce:"arrayObject.concat(num1[,num2...]);合并数组，返回合并后的数组，原数组不改变。",origin:"",return:"",optiation:this.handle},{name:"sort",introduce:"arrayObject.sort(function);对数组的元素排序，返回排序后的数组，原数组改变",origin:"",return:"",optiation:this.handle},{name:"join",introduce:"arrayObject.join(separator)将数组的元素组成一个字符串，以separator分开，若不传参数，则默认以逗号分开;返回组成后的字符串，原数组不变。",origin:"",return:"",optiation:this.handle},{name:"forEach",introduce:"arrayObject.forEach(callback[,thisObj])（callback参数为function，thisObj参数为this指向）遍历数组中的每一项，无返回值。",origin:"",return:"",optiation:this.handle},{name:"map",introduce:"arrayObject.map(callback[,thisObj])：映射，基本用法跟forEach类似，但是有返回值，返回值是一个数组，记录了每一个回调函数的返回值。",origin:"",return:"",optiation:this.handle},{name:"filter",introduce:"arrayObject.filter(callback[,thisObj])：过滤，返回过滤后的数组，基本用法跟map非常类似，callback返回值弱等于（==）true或者fasle,若为true,则表示通过（该元素保留下来了，继续查找下一项），false表示不通过(继续查找下一项)。",origin:"",return:"",optiation:this.handle},{name:"every",introduce:"every()是对数组中每一项运行给定函数，如果该函数对每一项返回true,则返回true。",origin:"",return:"",optiation:this.handle},{name:"some",introduce:"some()是对数组中每一项运行给定函数，如果该函数对任一项返回true，则返回true。",origin:"",return:"",optiation:this.handle},{name:"find",introduce:"arrayObject.find(callback[,thisObj]);查找，返回符合条件的数组，基本用法跟filter类似，callback返回值弱等于（==）true或者fasle,若为true,则表示找到该项，并返回，不再继续查找下一项，false表示未找到(继续查找下一项)。",origin:"",return:"",optiation:this.handle}]}},methods:{handle(t){console.log("方法下标",t);let i,e=JSON.parse(JSON.stringify(this.originArray1)),n=JSON.parse(JSON.stringify(this.originArray2));switch(t){case 0:i=e.shift(),this.funList[t].origin=e,this.funList[t].return=i;break;case 1:i=e.unshift(2),this.funList[t].origin=e,this.funList[t].return=i;break;case 2:i=e.splice(1,2,8,8,8,8),this.funList[t].origin=e,this.funList[t].return=i;break;case 3:i=e.slice(1,3),this.funList[t].origin=e,this.funList[t].return=i;break;case 4:i=e.concat(e,n),this.funList[t].origin=e,this.funList[t].return=i;break;case 5:i=e.sort(),this.funList[t].origin=e,this.funList[t].return=i;break;case 6:i=e.join("，"),this.funList[t].origin=e,this.funList[t].return=i;break;case 7:i=[],n.forEach((t=>{t.name="change",i.push(t)})),this.funList[t].origin=n,this.funList[t].return=i;break;case 8:i=n.map((t=>t.age=66)),this.funList[t].origin=n,this.funList[t].return=i;break;case 9:i=e.filter((t=>t>4)),this.funList[t].origin=e,this.funList[t].return=i;break;case 10:i=n.every((t=>(t.age+=1,t.age>30))),this.funList[t].origin=n,this.funList[t].return=i;break;case 11:i=e.some((t=>t>4)),this.funList[t].origin=e,this.funList[t].return=i;break;case 12:i=n.find((t=>(t.age+=18,t.age>40))),this.funList[t].origin=n,this.funList[t].return=i;break;default:break}}}},s=a,o=e(1001),u=(0,o.Z)(s,n,r,!1,null,null,null),c=u.exports},4939:function(t,i,e){e.r(i),e.d(i,{default:function(){return c}});var n=function(){var t=this,i=t._self._c;return i("div",[i("h2",{staticStyle:{"margin-block-start":"0"}},[t._v("css类切换")]),i("div",{staticClass:"bg-pic"},[i("h3",{staticStyle:{"margin-block-start":"0"}},[t._v("更换背景")]),i("div",[i("img",{attrs:{src:e(6908),"data-imgsrc":"bg01.jpg"},on:{click:t.changeBGImg}}),i("img",{attrs:{src:e(1200),"data-imgsrc":"bg02.jpg"},on:{click:t.changeBGImg}}),i("img",{attrs:{src:e(369),"data-imgsrc":"bg05.jpg"},on:{click:t.changeBGImg}}),i("img",{attrs:{src:e(9310),"data-imgsrc":"bg06.jpg"},on:{click:t.changeBGImg}})])]),i("div",{staticClass:"bg"},[i("h3",[t._v("更换主题肤色")]),i("div",[i("div",{staticClass:"light",attrs:{"data-bgcol":"light"},on:{click:t.changeBG}}),i("div",{staticClass:"dark",attrs:{"data-bgcol":"dark"},on:{click:t.changeBG}})])])])},r=[],a={data(){return{inputColor:null}},methods:{changeBGImg(t){console.log("选择图片背景",t.target.dataset.imgsrc);let i=t.target.dataset.imgsrc;this.$store.commit("SET_IMGNAME",i)},changeBG(t){console.log("选择颜色",t.target.dataset.bgcol),document.querySelector("body").removeAttribute("theme-type");let i=t.target.dataset.bgcol;this.$store.commit("SET_THEME",i)}}},s=a,o=e(1001),u=(0,o.Z)(s,n,r,!1,null,"5c874ce7",null),c=u.exports},9180:function(t,i,e){e.r(i),e.d(i,{default:function(){return c}});var n=function(){var t=this,i=t._self._c;return i("div",[i("h2",{staticStyle:{"margin-block-start":"0"}},[t._v("使用[]属性选择器改变父元素属性")]),i("div",{staticClass:"bg-pic"},[i("h3",{staticStyle:{"margin-block-start":"0"}},[t._v("更换背景")]),i("div",[i("img",{attrs:{src:e(648),"data-imgsrc":"bg07.jpg"},on:{click:t.changeBGImg}}),i("img",{attrs:{src:e(1627),"data-imgsrc":"bg08.jpg"},on:{click:t.changeBGImg}}),i("img",{attrs:{src:e(9378),"data-imgsrc":"bg09.jpg"},on:{click:t.changeBGImg}}),i("img",{attrs:{src:e(8167),"data-imgsrc":"bg10.jpg"},on:{click:t.changeBGImg}})])]),i("div",{staticClass:"bg"},[i("h3",[t._v("更换主题肤色")]),i("div",[i("div",{staticClass:"orange",attrs:{"data-bgcol":"orange"},on:{click:t.changeBG}}),i("div",{staticClass:"purple",attrs:{"data-bgcol":"purple"},on:{click:t.changeBG}})])])])},r=[],a={data(){return{inputColor:null}},methods:{changeBGImg(t){console.log("选择图片背景",t.target.dataset.imgsrc);let i=t.target.dataset.imgsrc;this.$store.commit("SET_IMGNAME",i)},changeBG(t){console.log("选择颜色",t.target.dataset.bgcol);let i=t.target.dataset.bgcol;document.querySelector("body").setAttribute("theme-type",i)}}},s=a,o=e(1001),u=(0,o.Z)(s,n,r,!1,null,"3282b01c",null),c=u.exports},6943:function(t,i,e){e.r(i),e.d(i,{default:function(){return c}});var n=function(){var t=this,i=t._self._c;return i("div",[i("span",[t._v("选择器优先级：")]),i("span",{staticStyle:{color:"red"}},[t._v("内联样式 > ID选择器 > 标签属性选择器 > 类选择器 > 标签选择器 > ")]),i("p",{staticStyle:{"text-align":"left",padding:"0 20px",color:"red"}},[t._v("|| 用来分割示例")]),t._l(t.funList,(function(e,n){return i("div",{key:n,staticStyle:{"text-align":"left",padding:"0 20px"}},[i("p",[t._v("选择器："+t._s(e.name))]),i("p",[t._v("示例一："+t._s(e.example1))]),i("p",[t._v("示例二：："+t._s(e.example2))]),i("a",{staticClass:"myA",attrs:{href:"www.baidu.com"}},[t._v("百度链接")])])}))],2)},r=[],a={data(){return{funList:[{name:"通配符选择器",example1:"*{   }",example2:"*.title{   }   ||   *[lang^=en] {   } : 匹配带有lang属性，并且lang属性值以en开头的元素"},{name:"标签选择器",example1:"h1 {   }",example2:"span {   }"},{name:"类选择器",example1:".mytitle {   }",example2:".app_container {   }"},{name:"ID选择器",example1:"#app {   }",example2:"#main {   }"},{name:"标签属性选择器",example1:'a[title] {   }      ||    a[href="https://example.org"] {   }',example2:'a[href*="example"]{   }：属性值包含example  ||  a[href^="example":{   }:属性值以example开头  ||  a[href$="example":{   }:属性值以example结尾]'},{name:"伪类选择器",example1:":hover {   }     ||  :active {   }",example2:":first-child {   }     ||    :nth-child {   }"},{name:"伪元素选择器",example1:"::after {   }      ||     ::before {   }",example2:"::first-line {   }     ||      ::first-letter {   }"},{name:"后代选择器",example1:"h1 .box {   }",example2:".main .box {   }"},{name:"子代选择器",example1:"h1>.box{   }",example2:"header>div{   }"},{name:"相邻兄弟选择器",example1:"p+h1{   }",example2:"p+span{   }"},{name:"通用兄弟选择器",example1:"ul~span{   }",example2:"p~a{   }"}]}},methods:{}},s=a,o=e(1001),u=(0,o.Z)(s,n,r,!1,null,null,null),c=u.exports},8437:function(t,i,e){e.r(i),e.d(i,{default:function(){return c}});var n=function(){var t=this,i=t._self._c;return i("div",[i("div",[t._v(t._s(t.originNumber)+"---\x3e"+t._s(typeof t.originNumber))]),i("div",[t._v(t._s(t.originNumber1)+"---\x3e"+t._s(typeof t.originNumber1))]),t._l(t.funList,(function(e,n){return i("div",{key:n,staticStyle:{"text-align":"left",padding:"0 20px"}},[i("p",[t._v("方法名："+t._s(e.name))]),i("p",[t._v("介绍："+t._s(e.introduce))]),i("p",[t._v("元数组："+t._s(e.origin))]),i("p",[t._v("返回值："+t._s(e.return))]),i("p",[t._v("返回值类型："+t._s(e.type))]),i("button",{on:{click:function(t){return e.optiation(n)}}},[t._v("执行")])])}))],2)},r=[],a={data(){return{originNumber:0xb29430b69c7ca,originNumber1:.6,funList:[{name:"toString",introduce:"toString() 把数字转换为字符串。",origin:"",return:"",type:"",optiation:this.handle},{name:"toFixed",introduce:"toFixed() 返回字符串值，它包含了指定位数小数的数字。",origin:"",return:"",type:"",optiation:this.handle},{name:"Math.ceil",introduce:"Math.ceil() 方法可对一个数进行上舍入",origin:"",return:"",type:"",optiation:this.handle},{name:"Math.floor",introduce:"Math.floor() 方法可对一个数进行下舍入",origin:"",return:"",type:"",optiation:this.handle},{name:"isInteger",introduce:"Number.isInteger() 用于判断其参数是为整数,Number的静态方法",origin:"",return:"",type:"",optiation:this.handle},{name:"trunc",introduce:"Math.trunc()方法用于去除一个数的小数部分，返回整数部分",origin:"",return:"",type:"",optiation:this.handle},{name:"random",introduce:"Math.random()获取0~1之间的随机小数，包含0，但不包含1",origin:"",return:"",type:"",optiation:this.handle},{name:"round",introduce:"Math.round()对数字进行四舍五入取整",origin:"",return:"",type:"",optiation:this.handle}]}},methods:{handle(t){console.log("方法下标",t);let i,e=JSON.parse(JSON.stringify(this.originNumber)),n=JSON.parse(JSON.stringify(this.originNumber1));switch(t){case 0:i=e.toString(),this.funList[t].origin=e,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 1:i=e.toFixed(2),this.funList[t].origin=e,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 2:i=Math.ceil(n),this.funList[t].origin=n,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 3:i=Math.floor(n),this.funList[t].origin=n,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 4:i=Number.isInteger(n),this.funList[t].origin=n,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 5:i=Math.trunc(n),this.funList[t].origin=n,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 6:i=Math.random(),this.funList[t].origin=e,this.funList[t].return=i,this.funList[t].type=typeof i;break;case 7:i=Math.round(n),this.funList[t].origin=n,this.funList[t].return=i,this.funList[t].type=typeof i;break;default:break}}}},s=a,o=e(1001),u=(0,o.Z)(s,n,r,!1,null,null,null),c=u.exports},1322:function(t,i,e){e.r(i),e.d(i,{default:function(){return c}});var n=function(){var t=this,i=t._self._c;return i("div",[i("div",[t._v(t._s(t.originString))]),t._l(t.funList,(function(e,n){return i("div",{key:n,staticStyle:{"text-align":"left",padding:"0 20px"}},[i("p",[t._v("方法名："+t._s(e.name))]),i("p",[t._v("介绍："+t._s(e.introduce))]),i("p",[t._v("原字符串："+t._s(e.origin))]),i("p",[t._v("返回值："+t._s(e.return))]),i("button",{on:{click:function(t){return e.optiation(n)}}},[t._v("执行")])])}))],2)},r=[],a={data(){return{originString:"夜晚的天上有星星、月亮、云，还有化作星星的你！    ",funList:[{name:"charAt",introduce:"charAt() 方法获取到的是指定位置的字符。",origin:"",return:"",optiation:this.handle},{name:"indexOf",introduce:"indexOf()：查找某个字符，有则返回第一次匹配到的位置，否则返回-1",origin:"",return:"",optiation:this.handle},{name:"includes",introduce:"includes()：该方法用于判断字符串是否包含指定的子字符串。如果找到匹配的字符串则返回 true，否则返回 false",origin:"",return:"",optiation:this.handle},{name:"startsWith",introduce:"该方法用于检测字符串是否以指定的子字符串开始。如果是以指定的子字符串开头返回 true，否则 false。",origin:"",return:"",optiation:this.handle},{name:"endsWith",introduce:"该方法用来判断当前字符串是否是以指定的子字符串结尾。如果传入的子字符串在搜索字符串的末尾则返回 true，否则将返回 false。",origin:"",return:"",optiation:this.handle},{name:"concat",introduce:"concat() 方法用于连接两个或多个字符串。该方法不会改变原有字符串，会返回连接两个或多个字符串的新字符串。",origin:"",return:"",optiation:this.handle},{name:"split",introduce:"split() 方法用于把一个字符串分割成字符串数组。该方法不会改变原始字符串。",origin:"",return:"",optiation:this.handle},{name:"slice",introduce:"slice() 方法用于提取字符串的某个部分，并以新的字符串返回被提取的部分。",origin:"",return:"",optiation:this.handle},{name:"substr",introduce:"substr() 方法用于在字符串中抽取从开始下标开始的指定数目的字符。",origin:"",return:"",optiation:this.handle},{name:"replace",introduce:"replace()：该方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。",origin:"",return:"",optiation:this.handle},{name:"search",introduce:"search()方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。",origin:"",return:"",optiation:this.handle},{name:"trim",introduce:"trim() 方法用于移除字符串首尾空白符，该方法不会改变原始字符串",origin:"",return:"",optiation:this.handle},{name:"repeat",introduce:"repeat() 方法返回一个新字符串，表示将原字符串重复n次",origin:"",return:"",optiation:this.handle},{name:"padStart、padEnd",introduce:"padStart()和padEnd()方法用于补齐字符串的长度。如果某个字符串不够指定长度，会在头部或尾部补全。",origin:"",return:"",optiation:this.handle}]}},methods:{handle(t){console.log("方法下标",t);let i,e=JSON.parse(JSON.stringify(this.originString));switch(t){case 0:i=e.charAt(2),this.funList[t].origin=e,this.funList[t].return=i;break;case 1:i=e.indexOf("的"),this.funList[t].origin=e,this.funList[t].return=i;break;case 2:i=e.includes("的"),this.funList[t].origin=e,this.funList[t].return=i;break;case 3:i=e.startsWith("夜"),this.funList[t].origin=e,this.funList[t].return=i;break;case 4:i=e.endsWith("夜"),this.funList[t].origin=e,this.funList[t].return=i;break;case 5:i=e.concat("我是后者拼接！！！"),this.funList[t].origin=e,this.funList[t].return=i;break;case 6:i=e.split("，"),this.funList[t].origin=e,this.funList[t].return=i;break;case 7:i=e.slice(2,5),this.funList[t].origin=e,this.funList[t].return=i;break;case 8:i=e.substr(2,5),this.funList[t].origin=e,this.funList[t].return=i;break;case 9:i=e.replace("夜晚","Today Night"),this.funList[t].origin=e,this.funList[t].return=i;break;case 10:i=e.search("星星"),this.funList[t].origin=e,this.funList[t].return=i;break;case 11:i=e.trim(),this.funList[t].origin=this.originString.length,this.funList[t].return=i.length;break;case 12:i=e.repeat(3),this.funList[t].origin=e,this.funList[t].return=i;break;case 13:i=e.padEnd(100,"我是补齐！"),this.funList[t].origin=e,this.funList[t].return=i;break;default:break}}}},s=a,o=e(1001),u=(0,o.Z)(s,n,r,!1,null,null,null),c=u.exports}}]);
//# sourceMappingURL=about.9d41674a.js.map